---

- name: Download url
  set_fact:
    archiva_download_url: "{{ archiva.download_base_url }}/{{ archiva.version }}/binaries/apache-archiva-{{ archiva.version }}-bin.zip"

- name: Download Archiva binary
  get_url:
    url: "{{ archiva_download_url }}"
    dest: "{{ ansible_env.HOME }}/archiva.zip"

- name: Make sure 'unzip' is installed
  package:
    name: unzip
    state: latest

- name: Extract archiva.zip
  become: yes
  unarchive:
    src: "{{ ansible_env.HOME }}/archiva.zip"
    dest: "{{ archiva.install_path }}"
    # remote_src: yes
    copy: no

- name: Create symbolic link
  become: yes
  file:
    src: "{{ archiva.install_path }}/apache-archiva-{{ archiva.version }}/bin/archiva"
    dest: /etc/init.d/archiva
    state: link

# this needs to be done otherwise task doesn't see "JAVA_HOME" by itself
- name: JAVA_HOME hack
  become: yes
  shell: . /etc/profile.d/java.sh && echo $JAVA_HOME
  register: java_home_val

- set_fact:
    JAVA_HOME: "{{ java_home_val.stdout }}"

- set_fact:
    JAVA_BIN_PATH: "{{ JAVA_HOME }}/bin"

- name: Set JAVA_HOME environment variable system-wide
  become: yes
  lineinfile:
    dest: /etc/environment
    line: "JAVA_HOME={{ JAVA_HOME }}"
    state: present

- name: Add JAVA_BIN_PATH to PATH
  become: yes
  lineinfile: >
    dest=/etc/environment
    state=present
    backrefs=yes
    regexp='PATH=(["]*)((?!.*?{{ JAVA_BIN_PATH }}).*?)(["]*)$'
    line="PATH=\1\2:{{ JAVA_BIN_PATH }}\3"

# has to be updated to the full path otherwise sometimes it doesn't start up
- name: Archiva wrapper config update
  become: yes
  replace:
    dest: "{{ archiva.install_path }}/apache-archiva-{{ archiva.version }}/conf/wrapper.conf"
    regexp: 'wrapper\.java\.command=java'
    replace: 'wrapper.java.command={{ JAVA_HOME }}/bin/java'

- name: Set provided port
  become: yes
  replace:
    dest: "{{ archiva.install_path }}/apache-archiva-{{ archiva.version }}/conf/jetty.xml"
    regexp: '<Set name="port"><SystemProperty name="jetty\.port" default="8080"/></Set>'
    replace: '<Set name="port"><SystemProperty name="jetty.port" default="{{ archiva.port }}"/></Set>'

- name: Register service and start
  become: yes
  service:
    name: archiva
    state: running
    enabled: yes

- name: Wait untils Archiva web API is available
  shell: curl --head --silent http://{{ ansible_host }}:{{ archiva.port }}/
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 15
  delay: 3
